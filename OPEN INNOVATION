OPEN IDEA:Criminal detection-Using VMD

import cv2

# Load the pre-trained Haarcascades face classifier
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Open video capture
cap = cv2.VideoCapture("C:/Users/lenovo/OneDrive/Desktop/face5.mp4")

while True:
    # Read frame from the video
    ret, frame = cap.read()
    if not ret:
        break

    # Convert the frame to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)

    # Draw rectangles around the faces
    for (x, y, w, h) in faces:
        cv2.rectangle(frame, (x, y), (x+w, y+h), (0,0,225), 2)

    # Display the output frame
    cv2.imshow("Face Detection", frame)

    # Break the loop if 'q' key is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture object and close the window
cap.release()
cv2.destroyAllWindows()


import cv2
import numpy as py

import pandas
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

# Open video capture
cap = cv2.VideoCapture("C:/Users/lenovo/OneDrive/Desktop/face5.mp4")
while True:
    # Read frame from the video
    ret, frame = cap.read()
    if not ret:
        break


    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect faces
    faces1= face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)
    # Draw rectangles around similar faces
    for (x1, y1, w1, h1) in faces1:
        face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
        # Open video capture
        cap = cv2.VideoCapture("C:/Users/lenovo/OneDrive/Desktop/face5.mp4")
        while True:
            # Read frame from the video
            ret, frame = cap.read()
            if not ret:
                break
            gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        # Detect faces
        faces2= face_cascade.detectMultiScale(gray, scaleFactor=1.3, minNeighbors=5)

        for(x2,y2,w2,h2) in faces2:
            if(faces1==faces2):
                cv2.rectangle(frame, (x, y), (x+w, y+h), (0,225,0), 2)
            # Display the output frame
            cv2.imshow("Face Detection", frame)
            # Break the loop if 'q' key is pressed
            if cv2.waitKey(1) & 0xFF == ord('q'):
                break

# Release the video capture object and close the window
cap.release()
cv2.destroyAllWindows()
